{
  "address": "0x9EB9798Dc1b602067DFe5A57c3bfc914B965acFD",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_api3ServerV1",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "proxyAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "dapiName",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "metadata",
          "type": "bytes"
        }
      ],
      "name": "DeployedDapiProxy",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "proxyAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "dapiName",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "oevBeneficiary",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "metadata",
          "type": "bytes"
        }
      ],
      "name": "DeployedDapiProxyWithOev",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "proxyAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "dataFeedId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "metadata",
          "type": "bytes"
        }
      ],
      "name": "DeployedDataFeedProxy",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "proxyAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "dataFeedId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "oevBeneficiary",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "metadata",
          "type": "bytes"
        }
      ],
      "name": "DeployedDataFeedProxyWithOev",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "api3ServerV1",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "dapiName",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "metadata",
          "type": "bytes"
        }
      ],
      "name": "computeDapiProxyAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "proxyAddress",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "dapiName",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "oevBeneficiary",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "metadata",
          "type": "bytes"
        }
      ],
      "name": "computeDapiProxyWithOevAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "proxyAddress",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "dataFeedId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "metadata",
          "type": "bytes"
        }
      ],
      "name": "computeDataFeedProxyAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "proxyAddress",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "dataFeedId",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "oevBeneficiary",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "metadata",
          "type": "bytes"
        }
      ],
      "name": "computeDataFeedProxyWithOevAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "proxyAddress",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "dapiName",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "metadata",
          "type": "bytes"
        }
      ],
      "name": "deployDapiProxy",
      "outputs": [
        {
          "internalType": "address",
          "name": "proxyAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "dapiName",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "oevBeneficiary",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "metadata",
          "type": "bytes"
        }
      ],
      "name": "deployDapiProxyWithOev",
      "outputs": [
        {
          "internalType": "address",
          "name": "proxyAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "dataFeedId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "metadata",
          "type": "bytes"
        }
      ],
      "name": "deployDataFeedProxy",
      "outputs": [
        {
          "internalType": "address",
          "name": "proxyAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "dataFeedId",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "oevBeneficiary",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "metadata",
          "type": "bytes"
        }
      ],
      "name": "deployDataFeedProxyWithOev",
      "outputs": [
        {
          "internalType": "address",
          "name": "proxyAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xfb690f43594de44fef9ec204d98752a99f7ef3f707f8a76ca8206c9fb713c488",
  "receipt": {
    "to": "0x4e59b44847b379578588920cA78FbF26c0B4956C",
    "from": "0x07b589f06bD0A5324c4E2376d66d2F4F25921DE1",
    "contractAddress": null,
    "transactionIndex": 40,
    "gasUsed": "1473171",
    "logsBloom": "0x
    "blockHash": "0x9260bc58b21d9ee8730bb9775ff262443ac0a88e96bb25819f00885e8f751ae8",
    "transactionHash": "0xfb690f43594de44fef9ec204d98752a99f7ef3f707f8a76ca8206c9fb713c488",
    "logs": [
      {
        "transactionIndex": 40,
        "blockNumber": 50814057,
        "transactionHash": "0xfb690f43594de44fef9ec204d98752a99f7ef3f707f8a76ca8206c9fb713c488",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x00000000000000000000000007b589f06bd0a5324c4e2376d66d2f4f25921de1",
          "0x000000000000000000000000e7e2cb8c81c10ff191a73fe266788c9ce62ec754"
        ],
        "data": "0x00000000000000000000000000000000000000000000000000d9b91a00bf18620000000000000000000000000000000000000000000000c62830745d2eb0c091000000000000000000000000000000000000000000005194da23a676a87f49db0000000000000000000000000000000000000000000000c62756bb432df1a82f000000000000000000000000000000000000000000005194dafd5f90a93e623d",
        "logIndex": 129,
        "blockHash": "0x9260bc58b21d9ee8730bb9775ff262443ac0a88e96bb25819f00885e8f751ae8"
      }
    ],
    "blockNumber": 50814057,
    "cumulativeGasUsed": "5636085",
    "status": 1,
    "byzantium": true
  },
  "args": ["0x709944a48cAf83535e43471680fDA4905FB3920a"],
  "numDeployments": 1,
  "solcInputHash": "76975463642f13e8363e0f61bd6120e1",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_api3ServerV1\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proxyAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"dapiName\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"metadata\",\"type\":\"bytes\"}],\"name\":\"DeployedDapiProxy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proxyAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"dapiName\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oevBeneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"metadata\",\"type\":\"bytes\"}],\"name\":\"DeployedDapiProxyWithOev\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proxyAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"dataFeedId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"metadata\",\"type\":\"bytes\"}],\"name\":\"DeployedDataFeedProxy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proxyAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"dataFeedId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oevBeneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"metadata\",\"type\":\"bytes\"}],\"name\":\"DeployedDataFeedProxyWithOev\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"api3ServerV1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dapiName\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"metadata\",\"type\":\"bytes\"}],\"name\":\"computeDapiProxyAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"proxyAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dapiName\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"oevBeneficiary\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"metadata\",\"type\":\"bytes\"}],\"name\":\"computeDapiProxyWithOevAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"proxyAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataFeedId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"metadata\",\"type\":\"bytes\"}],\"name\":\"computeDataFeedProxyAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"proxyAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataFeedId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"oevBeneficiary\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"metadata\",\"type\":\"bytes\"}],\"name\":\"computeDataFeedProxyWithOevAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"proxyAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dapiName\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"metadata\",\"type\":\"bytes\"}],\"name\":\"deployDapiProxy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"proxyAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dapiName\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"oevBeneficiary\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"metadata\",\"type\":\"bytes\"}],\"name\":\"deployDapiProxyWithOev\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"proxyAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataFeedId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"metadata\",\"type\":\"bytes\"}],\"name\":\"deployDataFeedProxy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"proxyAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataFeedId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"oevBeneficiary\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"metadata\",\"type\":\"bytes\"}],\"name\":\"deployDataFeedProxyWithOev\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"proxyAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The proxies are deployed normally and not cloned to minimize the gas cost overhead while using them to read data feed values\",\"kind\":\"dev\",\"methods\":{\"computeDapiProxyAddress(bytes32,bytes)\":{\"params\":{\"dapiName\":\"dAPI name\",\"metadata\":\"Metadata associated with the proxy\"},\"returns\":{\"proxyAddress\":\"Proxy address\"}},\"computeDapiProxyWithOevAddress(bytes32,address,bytes)\":{\"params\":{\"dapiName\":\"dAPI name\",\"metadata\":\"Metadata associated with the proxy\",\"oevBeneficiary\":\"OEV beneficiary\"},\"returns\":{\"proxyAddress\":\"Proxy address\"}},\"computeDataFeedProxyAddress(bytes32,bytes)\":{\"params\":{\"dataFeedId\":\"Data feed ID\",\"metadata\":\"Metadata associated with the proxy\"},\"returns\":{\"proxyAddress\":\"Proxy address\"}},\"computeDataFeedProxyWithOevAddress(bytes32,address,bytes)\":{\"params\":{\"dataFeedId\":\"Data feed ID\",\"metadata\":\"Metadata associated with the proxy\",\"oevBeneficiary\":\"OEV beneficiary\"},\"returns\":{\"proxyAddress\":\"Proxy address\"}},\"constructor\":{\"params\":{\"_api3ServerV1\":\"Api3ServerV1 address\"}},\"deployDapiProxy(bytes32,bytes)\":{\"params\":{\"dapiName\":\"dAPI name\",\"metadata\":\"Metadata associated with the proxy\"},\"returns\":{\"proxyAddress\":\"Proxy address\"}},\"deployDapiProxyWithOev(bytes32,address,bytes)\":{\"params\":{\"dapiName\":\"dAPI name\",\"metadata\":\"Metadata associated with the proxy\",\"oevBeneficiary\":\"OEV beneficiary\"},\"returns\":{\"proxyAddress\":\"Proxy address\"}},\"deployDataFeedProxy(bytes32,bytes)\":{\"params\":{\"dataFeedId\":\"Data feed ID\",\"metadata\":\"Metadata associated with the proxy\"},\"returns\":{\"proxyAddress\":\"Proxy address\"}},\"deployDataFeedProxyWithOev(bytes32,address,bytes)\":{\"params\":{\"dataFeedId\":\"Data feed ID\",\"metadata\":\"Metadata associated with the proxy\",\"oevBeneficiary\":\"OEV beneficiary\"},\"returns\":{\"proxyAddress\":\"Proxy address\"}}},\"title\":\"Contract factory that deterministically deploys proxies that read data feeds (Beacons or Beacon sets) or dAPIs, along with optional OEV support\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"api3ServerV1()\":{\"notice\":\"Api3ServerV1 address\"},\"computeDapiProxyAddress(bytes32,bytes)\":{\"notice\":\"Computes the address of the dAPI proxy\"},\"computeDapiProxyWithOevAddress(bytes32,address,bytes)\":{\"notice\":\"Computes the address of the dAPI proxy with OEV support\"},\"computeDataFeedProxyAddress(bytes32,bytes)\":{\"notice\":\"Computes the address of the data feed proxy\"},\"computeDataFeedProxyWithOevAddress(bytes32,address,bytes)\":{\"notice\":\"Computes the address of the data feed proxy with OEV support\"},\"deployDapiProxy(bytes32,bytes)\":{\"notice\":\"Deterministically deploys a dAPI proxy\"},\"deployDapiProxyWithOev(bytes32,address,bytes)\":{\"notice\":\"Deterministically deploys a dAPI proxy with OEV support\"},\"deployDataFeedProxy(bytes32,bytes)\":{\"notice\":\"Deterministically deploys a data feed proxy\"},\"deployDataFeedProxyWithOev(bytes32,address,bytes)\":{\"notice\":\"Deterministically deploys a data feed proxy with OEV support\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/api3-server-v1/proxies/ProxyFactory.sol\":\"ProxyFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Create2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Create2.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Helper to make usage of the `CREATE2` EVM opcode easier and safer.\\n * `CREATE2` can be used to compute in advance the address where a smart\\n * contract will be deployed, which allows for interesting new mechanisms known\\n * as 'counterfactual interactions'.\\n *\\n * See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more\\n * information.\\n */\\nlibrary Create2 {\\n    /**\\n     * @dev Deploys a contract using `CREATE2`. The address where the contract\\n     * will be deployed can be known in advance via {computeAddress}.\\n     *\\n     * The bytecode for a contract can be obtained from Solidity with\\n     * `type(contractName).creationCode`.\\n     *\\n     * Requirements:\\n     *\\n     * - `bytecode` must not be empty.\\n     * - `salt` must have not been used for `bytecode` already.\\n     * - the factory must have a balance of at least `amount`.\\n     * - if `amount` is non-zero, `bytecode` must have a `payable` constructor.\\n     */\\n    function deploy(\\n        uint256 amount,\\n        bytes32 salt,\\n        bytes memory bytecode\\n    ) internal returns (address addr) {\\n        require(address(this).balance >= amount, \\\"Create2: insufficient balance\\\");\\n        require(bytecode.length != 0, \\\"Create2: bytecode length is zero\\\");\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            addr := create2(amount, add(bytecode, 0x20), mload(bytecode), salt)\\n        }\\n        require(addr != address(0), \\\"Create2: Failed on deploy\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the address where a contract will be stored if deployed via {deploy}. Any change in the\\n     * `bytecodeHash` or `salt` will result in a new destination address.\\n     */\\n    function computeAddress(bytes32 salt, bytes32 bytecodeHash) internal view returns (address) {\\n        return computeAddress(salt, bytecodeHash, address(this));\\n    }\\n\\n    /**\\n     * @dev Returns the address where a contract will be stored if deployed via {deploy} from a contract located at\\n     * `deployer`. If `deployer` is this contract's address, returns the same value as {computeAddress}.\\n     */\\n    function computeAddress(\\n        bytes32 salt,\\n        bytes32 bytecodeHash,\\n        address deployer\\n    ) internal pure returns (address addr) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            let ptr := mload(0x40) // Get free memory pointer\\n\\n            // |                   | \\u2193 ptr ...  \\u2193 ptr + 0x0B (start) ...  \\u2193 ptr + 0x20 ...  \\u2193 ptr + 0x40 ...   |\\n            // |-------------------|---------------------------------------------------------------------------|\\n            // | bytecodeHash      |                                                        CCCCCCCCCCCCC...CC |\\n            // | salt              |                                      BBBBBBBBBBBBB...BB                   |\\n            // | deployer          | 000000...0000AAAAAAAAAAAAAAAAAAA...AA                                     |\\n            // | 0xFF              |            FF                                                             |\\n            // |-------------------|---------------------------------------------------------------------------|\\n            // | memory            | 000000...00FFAAAAAAAAAAAAAAAAAAA...AABBBBBBBBBBBBB...BBCCCCCCCCCCCCC...CC |\\n            // | keccak(start, 85) |            \\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191 |\\n\\n            mstore(add(ptr, 0x40), bytecodeHash)\\n            mstore(add(ptr, 0x20), salt)\\n            mstore(ptr, deployer) // Right-aligned with 12 preceding garbage bytes\\n            let start := add(ptr, 0x0b) // The hashed data starts at the final garbage byte which we will set to 0xff\\n            mstore8(start, 0xff)\\n            addr := keccak256(start, 85)\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xafc07f37809f74d9c66d6461cc0f85fb5147ab855acd0acc30af4b2272130c61\",\"license\":\"MIT\"},\"contracts/access-control-registry/interfaces/IAccessControlRegistryAdminned.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/interfaces/ISelfMulticall.sol\\\";\\n\\ninterface IAccessControlRegistryAdminned is ISelfMulticall {\\n    function accessControlRegistry() external view returns (address);\\n\\n    function adminRoleDescription() external view returns (string memory);\\n}\\n\",\"keccak256\":\"0xd71aae2566c019a9b2da5e1ec51421a62898495fa6fd08e2cc39451511dda334\",\"license\":\"MIT\"},\"contracts/access-control-registry/interfaces/IAccessControlRegistryAdminnedWithManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IAccessControlRegistryAdminned.sol\\\";\\n\\ninterface IAccessControlRegistryAdminnedWithManager is\\n    IAccessControlRegistryAdminned\\n{\\n    function manager() external view returns (address);\\n\\n    function adminRole() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x8a8e1756fca81175305755b7a311536132e88173f60b2ac0fdeef92a6236afc5\",\"license\":\"MIT\"},\"contracts/api3-server-v1/interfaces/IApi3ServerV1.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IOevDapiServer.sol\\\";\\nimport \\\"./IBeaconUpdatesWithSignedData.sol\\\";\\n\\ninterface IApi3ServerV1 is IOevDapiServer, IBeaconUpdatesWithSignedData {\\n    function readDataFeedWithId(\\n        bytes32 dataFeedId\\n    ) external view returns (int224 value, uint32 timestamp);\\n\\n    function readDataFeedWithDapiNameHash(\\n        bytes32 dapiNameHash\\n    ) external view returns (int224 value, uint32 timestamp);\\n\\n    function readDataFeedWithIdAsOevProxy(\\n        bytes32 dataFeedId\\n    ) external view returns (int224 value, uint32 timestamp);\\n\\n    function readDataFeedWithDapiNameHashAsOevProxy(\\n        bytes32 dapiNameHash\\n    ) external view returns (int224 value, uint32 timestamp);\\n\\n    function dataFeeds(\\n        bytes32 dataFeedId\\n    ) external view returns (int224 value, uint32 timestamp);\\n\\n    function oevProxyToIdToDataFeed(\\n        address proxy,\\n        bytes32 dataFeedId\\n    ) external view returns (int224 value, uint32 timestamp);\\n}\\n\",\"keccak256\":\"0xea2c05eaf2a19c93a9c9b08243fcabd8d7fcf0e4d422f7c687aef693126c1809\",\"license\":\"MIT\"},\"contracts/api3-server-v1/interfaces/IBeaconUpdatesWithSignedData.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IDataFeedServer.sol\\\";\\n\\ninterface IBeaconUpdatesWithSignedData is IDataFeedServer {\\n    function updateBeaconWithSignedData(\\n        address airnode,\\n        bytes32 templateId,\\n        uint256 timestamp,\\n        bytes calldata data,\\n        bytes calldata signature\\n    ) external returns (bytes32 beaconId);\\n}\\n\",\"keccak256\":\"0xe2b2530081508baf1323d4c145a688ffd548cf318a8cb67c9ccb4abe1ac81c6e\",\"license\":\"MIT\"},\"contracts/api3-server-v1/interfaces/IDapiServer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../access-control-registry/interfaces/IAccessControlRegistryAdminnedWithManager.sol\\\";\\nimport \\\"./IDataFeedServer.sol\\\";\\n\\ninterface IDapiServer is\\n    IAccessControlRegistryAdminnedWithManager,\\n    IDataFeedServer\\n{\\n    event SetDapiName(\\n        bytes32 indexed dataFeedId,\\n        bytes32 indexed dapiName,\\n        address sender\\n    );\\n\\n    function setDapiName(bytes32 dapiName, bytes32 dataFeedId) external;\\n\\n    function dapiNameToDataFeedId(\\n        bytes32 dapiName\\n    ) external view returns (bytes32);\\n\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DAPI_NAME_SETTER_ROLE_DESCRIPTION()\\n        external\\n        view\\n        returns (string memory);\\n\\n    function dapiNameSetterRole() external view returns (bytes32);\\n\\n    function dapiNameHashToDataFeedId(\\n        bytes32 dapiNameHash\\n    ) external view returns (bytes32 dataFeedId);\\n}\\n\",\"keccak256\":\"0x61cd079ceb84d2b7414b82da71f4f000e52a0a1429065ec666e77ef6e5f21ea1\",\"license\":\"MIT\"},\"contracts/api3-server-v1/interfaces/IDataFeedServer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/interfaces/IExtendedSelfMulticall.sol\\\";\\n\\ninterface IDataFeedServer is IExtendedSelfMulticall {\\n    event UpdatedBeaconWithSignedData(\\n        bytes32 indexed beaconId,\\n        int224 value,\\n        uint32 timestamp\\n    );\\n\\n    event UpdatedBeaconSetWithBeacons(\\n        bytes32 indexed beaconSetId,\\n        int224 value,\\n        uint32 timestamp\\n    );\\n\\n    function updateBeaconSetWithBeacons(\\n        bytes32[] memory beaconIds\\n    ) external returns (bytes32 beaconSetId);\\n}\\n\",\"keccak256\":\"0x208f751f71b16d454cafd9188095178fdc776ee0376a85362f6022e7a4f010a3\",\"license\":\"MIT\"},\"contracts/api3-server-v1/interfaces/IOevDapiServer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IOevDataFeedServer.sol\\\";\\nimport \\\"./IDapiServer.sol\\\";\\n\\ninterface IOevDapiServer is IOevDataFeedServer, IDapiServer {}\\n\",\"keccak256\":\"0xf4082c33979785131358a217a8c5cf498a53c04318868eb1cb68e934c33226e3\",\"license\":\"MIT\"},\"contracts/api3-server-v1/interfaces/IOevDataFeedServer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IDataFeedServer.sol\\\";\\n\\ninterface IOevDataFeedServer is IDataFeedServer {\\n    event UpdatedOevProxyBeaconWithSignedData(\\n        bytes32 indexed beaconId,\\n        address indexed proxy,\\n        bytes32 indexed updateId,\\n        int224 value,\\n        uint32 timestamp\\n    );\\n\\n    event UpdatedOevProxyBeaconSetWithSignedData(\\n        bytes32 indexed beaconSetId,\\n        address indexed proxy,\\n        bytes32 indexed updateId,\\n        int224 value,\\n        uint32 timestamp\\n    );\\n\\n    event Withdrew(\\n        address indexed oevProxy,\\n        address oevBeneficiary,\\n        uint256 amount\\n    );\\n\\n    function updateOevProxyDataFeedWithSignedData(\\n        address oevProxy,\\n        bytes32 dataFeedId,\\n        bytes32 updateId,\\n        uint256 timestamp,\\n        bytes calldata data,\\n        bytes[] calldata packedOevUpdateSignatures\\n    ) external payable;\\n\\n    function withdraw(address oevProxy) external;\\n\\n    function oevProxyToBalance(\\n        address oevProxy\\n    ) external view returns (uint256 balance);\\n}\\n\",\"keccak256\":\"0x2d162c576bfe5554767bb48758314c3e6f2c509f73203f0e166d1ac5168a1218\",\"license\":\"MIT\"},\"contracts/api3-server-v1/proxies/DapiProxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./interfaces/IDapiProxy.sol\\\";\\nimport \\\"../interfaces/IApi3ServerV1.sol\\\";\\n\\n/// @title An immutable proxy contract that is used to read a specific dAPI of\\n/// a specific Api3ServerV1 contract\\n/// @notice In an effort to reduce the bytecode of this contract, its\\n/// constructor arguments are validated by ProxyFactory, rather than\\n/// internally. If you intend to deploy this contract without using\\n/// ProxyFactory, you are recommended to implement an equivalent validation.\\n/// @dev The proxy contracts are generalized to support most types of numerical\\n/// data feeds. This means that the user of this proxy is expected to validate\\n/// the read values according to the specific use-case. For example, `value` is\\n/// a signed integer, yet it being negative may not make sense in the case that\\n/// the data feed represents the spot price of an asset. In that case, the user\\n/// is responsible with ensuring that `value` is not negative.\\n/// In the case that the data feed is from a single source, `timestamp` is the\\n/// system time of the Airnode when it signed the data. In the case that the\\n/// data feed is from multiple sources, `timestamp` is the median of system\\n/// times of the Airnodes when they signed the respective data. There are two\\n/// points to consider while using `timestamp` in your contract logic: (1) It\\n/// is based on the system time of the Airnodes, and not the block timestamp.\\n/// This may be relevant when either of them drifts. (2) `timestamp` is an\\n/// off-chain value that is being reported, similar to `value`. Both should\\n/// only be trusted as much as the Airnode(s) that report them.\\ncontract DapiProxy is IDapiProxy {\\n    /// @notice Api3ServerV1 address\\n    address public immutable override api3ServerV1;\\n    /// @notice Hash of the dAPI name\\n    bytes32 public immutable override dapiNameHash;\\n\\n    /// @param _api3ServerV1 Api3ServerV1 address\\n    /// @param _dapiNameHash Hash of the dAPI name\\n    constructor(address _api3ServerV1, bytes32 _dapiNameHash) {\\n        api3ServerV1 = _api3ServerV1;\\n        dapiNameHash = _dapiNameHash;\\n    }\\n\\n    /// @notice Reads the dAPI that this proxy maps to\\n    /// @return value dAPI value\\n    /// @return timestamp dAPI timestamp\\n    function read()\\n        external\\n        view\\n        virtual\\n        override\\n        returns (int224 value, uint32 timestamp)\\n    {\\n        (value, timestamp) = IApi3ServerV1(api3ServerV1)\\n            .readDataFeedWithDapiNameHash(dapiNameHash);\\n    }\\n}\\n\",\"keccak256\":\"0x7bda11348ffff6be0621803c2ef1e146b9abd55e9b6f35a71392b2ecbf18f8ea\",\"license\":\"MIT\"},\"contracts/api3-server-v1/proxies/DapiProxyWithOev.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./DapiProxy.sol\\\";\\nimport \\\"./interfaces/IOevProxy.sol\\\";\\n\\n/// @title An immutable proxy contract that is used to read a specific dAPI of\\n/// a specific Api3ServerV1 contract and inform Api3ServerV1 about the\\n/// beneficiary of the respective OEV proceeds\\n/// @notice In an effort to reduce the bytecode of this contract, its\\n/// constructor arguments are validated by ProxyFactory, rather than\\n/// internally. If you intend to deploy this contract without using\\n/// ProxyFactory, you are recommended to implement an equivalent validation.\\n/// @dev See DapiProxy.sol for comments about usage\\ncontract DapiProxyWithOev is DapiProxy, IOevProxy {\\n    /// @notice OEV beneficiary address\\n    address public immutable override oevBeneficiary;\\n\\n    /// @param _api3ServerV1 Api3ServerV1 address\\n    /// @param _dapiNameHash Hash of the dAPI name\\n    /// @param _oevBeneficiary OEV beneficiary\\n    constructor(\\n        address _api3ServerV1,\\n        bytes32 _dapiNameHash,\\n        address _oevBeneficiary\\n    ) DapiProxy(_api3ServerV1, _dapiNameHash) {\\n        oevBeneficiary = _oevBeneficiary;\\n    }\\n\\n    /// @notice Reads the dAPI that this proxy maps to\\n    /// @return value dAPI value\\n    /// @return timestamp dAPI timestamp\\n    function read()\\n        external\\n        view\\n        virtual\\n        override\\n        returns (int224 value, uint32 timestamp)\\n    {\\n        (value, timestamp) = IApi3ServerV1(api3ServerV1)\\n            .readDataFeedWithDapiNameHashAsOevProxy(dapiNameHash);\\n    }\\n}\\n\",\"keccak256\":\"0x1ebe7b44c0e49d9afc942dc1beea2a0c42ad79bb514086ea9e74d027ec7237c9\",\"license\":\"MIT\"},\"contracts/api3-server-v1/proxies/DataFeedProxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./interfaces/IDataFeedProxy.sol\\\";\\nimport \\\"../interfaces/IApi3ServerV1.sol\\\";\\n\\n/// @title An immutable proxy contract that is used to read a specific data\\n/// feed (Beacon or Beacon set) of a specific Api3ServerV1 contract\\n/// @notice In an effort to reduce the bytecode of this contract, its\\n/// constructor arguments are validated by ProxyFactory, rather than\\n/// internally. If you intend to deploy this contract without using\\n/// ProxyFactory, you are recommended to implement an equivalent validation.\\n/// @dev See DapiProxy.sol for comments about usage\\ncontract DataFeedProxy is IDataFeedProxy {\\n    /// @notice Api3ServerV1 address\\n    address public immutable override api3ServerV1;\\n    /// @notice Data feed ID\\n    bytes32 public immutable override dataFeedId;\\n\\n    /// @param _api3ServerV1 Api3ServerV1 address\\n    /// @param _dataFeedId Data feed (Beacon or Beacon set) ID\\n    constructor(address _api3ServerV1, bytes32 _dataFeedId) {\\n        api3ServerV1 = _api3ServerV1;\\n        dataFeedId = _dataFeedId;\\n    }\\n\\n    /// @notice Reads the data feed that this proxy maps to\\n    /// @return value Data feed value\\n    /// @return timestamp Data feed timestamp\\n    function read()\\n        external\\n        view\\n        virtual\\n        override\\n        returns (int224 value, uint32 timestamp)\\n    {\\n        (value, timestamp) = IApi3ServerV1(api3ServerV1).readDataFeedWithId(\\n            dataFeedId\\n        );\\n    }\\n}\\n\",\"keccak256\":\"0x955b09a7777f4c80ebcff66a7e685459b0308a94eb6faf78757274e9dff643d4\",\"license\":\"MIT\"},\"contracts/api3-server-v1/proxies/DataFeedProxyWithOev.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./DataFeedProxy.sol\\\";\\nimport \\\"./interfaces/IOevProxy.sol\\\";\\n\\n/// @title An immutable proxy contract that is used to read a specific data\\n/// feed (Beacon or Beacon set) of a specific Api3ServerV1 contract and inform\\n/// Api3ServerV1 about the beneficiary of the respective OEV proceeds\\n/// @notice In an effort to reduce the bytecode of this contract, its\\n/// constructor arguments are validated by ProxyFactory, rather than\\n/// internally. If you intend to deploy this contract without using\\n/// ProxyFactory, you are recommended to implement an equivalent validation.\\n/// @dev See DapiProxy.sol for comments about usage\\ncontract DataFeedProxyWithOev is DataFeedProxy, IOevProxy {\\n    /// @notice OEV beneficiary address\\n    address public immutable override oevBeneficiary;\\n\\n    /// @param _api3ServerV1 Api3ServerV1 address\\n    /// @param _dataFeedId Data feed (Beacon or Beacon set) ID\\n    /// @param _oevBeneficiary OEV beneficiary\\n    constructor(\\n        address _api3ServerV1,\\n        bytes32 _dataFeedId,\\n        address _oevBeneficiary\\n    ) DataFeedProxy(_api3ServerV1, _dataFeedId) {\\n        oevBeneficiary = _oevBeneficiary;\\n    }\\n\\n    /// @notice Reads the data feed that this proxy maps to\\n    /// @return value Data feed value\\n    /// @return timestamp Data feed timestamp\\n    function read()\\n        external\\n        view\\n        virtual\\n        override\\n        returns (int224 value, uint32 timestamp)\\n    {\\n        (value, timestamp) = IApi3ServerV1(api3ServerV1)\\n            .readDataFeedWithIdAsOevProxy(dataFeedId);\\n    }\\n}\\n\",\"keccak256\":\"0xad9ccf4ed36a49e13da6a84bf617b22888d0c5b3db737c139609ee322aa4bff8\",\"license\":\"MIT\"},\"contracts/api3-server-v1/proxies/ProxyFactory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./DataFeedProxy.sol\\\";\\nimport \\\"./DapiProxy.sol\\\";\\nimport \\\"./DataFeedProxyWithOev.sol\\\";\\nimport \\\"./DapiProxyWithOev.sol\\\";\\nimport \\\"./interfaces/IProxyFactory.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Create2.sol\\\";\\n\\n/// @title Contract factory that deterministically deploys proxies that read\\n/// data feeds (Beacons or Beacon sets) or dAPIs, along with optional OEV\\n/// support\\n/// @dev The proxies are deployed normally and not cloned to minimize the gas\\n/// cost overhead while using them to read data feed values\\ncontract ProxyFactory is IProxyFactory {\\n    /// @notice Api3ServerV1 address\\n    address public immutable override api3ServerV1;\\n\\n    /// @param _api3ServerV1 Api3ServerV1 address\\n    constructor(address _api3ServerV1) {\\n        require(_api3ServerV1 != address(0), \\\"Api3ServerV1 address zero\\\");\\n        api3ServerV1 = _api3ServerV1;\\n    }\\n\\n    /// @notice Deterministically deploys a data feed proxy\\n    /// @param dataFeedId Data feed ID\\n    /// @param metadata Metadata associated with the proxy\\n    /// @return proxyAddress Proxy address\\n    function deployDataFeedProxy(\\n        bytes32 dataFeedId,\\n        bytes calldata metadata\\n    ) external override returns (address proxyAddress) {\\n        require(dataFeedId != bytes32(0), \\\"Data feed ID zero\\\");\\n        proxyAddress = address(\\n            new DataFeedProxy{salt: keccak256(metadata)}(\\n                api3ServerV1,\\n                dataFeedId\\n            )\\n        );\\n        emit DeployedDataFeedProxy(proxyAddress, dataFeedId, metadata);\\n    }\\n\\n    /// @notice Deterministically deploys a dAPI proxy\\n    /// @param dapiName dAPI name\\n    /// @param metadata Metadata associated with the proxy\\n    /// @return proxyAddress Proxy address\\n    function deployDapiProxy(\\n        bytes32 dapiName,\\n        bytes calldata metadata\\n    ) external override returns (address proxyAddress) {\\n        require(dapiName != bytes32(0), \\\"dAPI name zero\\\");\\n        proxyAddress = address(\\n            new DapiProxy{salt: keccak256(metadata)}(\\n                api3ServerV1,\\n                keccak256(abi.encodePacked(dapiName))\\n            )\\n        );\\n        emit DeployedDapiProxy(proxyAddress, dapiName, metadata);\\n    }\\n\\n    /// @notice Deterministically deploys a data feed proxy with OEV support\\n    /// @param dataFeedId Data feed ID\\n    /// @param oevBeneficiary OEV beneficiary\\n    /// @param metadata Metadata associated with the proxy\\n    /// @return proxyAddress Proxy address\\n    function deployDataFeedProxyWithOev(\\n        bytes32 dataFeedId,\\n        address oevBeneficiary,\\n        bytes calldata metadata\\n    ) external override returns (address proxyAddress) {\\n        require(dataFeedId != bytes32(0), \\\"Data feed ID zero\\\");\\n        require(oevBeneficiary != address(0), \\\"OEV beneficiary zero\\\");\\n        proxyAddress = address(\\n            new DataFeedProxyWithOev{salt: keccak256(metadata)}(\\n                api3ServerV1,\\n                dataFeedId,\\n                oevBeneficiary\\n            )\\n        );\\n        emit DeployedDataFeedProxyWithOev(\\n            proxyAddress,\\n            dataFeedId,\\n            oevBeneficiary,\\n            metadata\\n        );\\n    }\\n\\n    /// @notice Deterministically deploys a dAPI proxy with OEV support\\n    /// @param dapiName dAPI name\\n    /// @param oevBeneficiary OEV beneficiary\\n    /// @param metadata Metadata associated with the proxy\\n    /// @return proxyAddress Proxy address\\n    function deployDapiProxyWithOev(\\n        bytes32 dapiName,\\n        address oevBeneficiary,\\n        bytes calldata metadata\\n    ) external override returns (address proxyAddress) {\\n        require(dapiName != bytes32(0), \\\"dAPI name zero\\\");\\n        require(oevBeneficiary != address(0), \\\"OEV beneficiary zero\\\");\\n        proxyAddress = address(\\n            new DapiProxyWithOev{salt: keccak256(metadata)}(\\n                api3ServerV1,\\n                keccak256(abi.encodePacked(dapiName)),\\n                oevBeneficiary\\n            )\\n        );\\n        emit DeployedDapiProxyWithOev(\\n            proxyAddress,\\n            dapiName,\\n            oevBeneficiary,\\n            metadata\\n        );\\n    }\\n\\n    /// @notice Computes the address of the data feed proxy\\n    /// @param dataFeedId Data feed ID\\n    /// @param metadata Metadata associated with the proxy\\n    /// @return proxyAddress Proxy address\\n    function computeDataFeedProxyAddress(\\n        bytes32 dataFeedId,\\n        bytes calldata metadata\\n    ) external view override returns (address proxyAddress) {\\n        require(dataFeedId != bytes32(0), \\\"Data feed ID zero\\\");\\n        proxyAddress = Create2.computeAddress(\\n            keccak256(metadata),\\n            keccak256(\\n                abi.encodePacked(\\n                    type(DataFeedProxy).creationCode,\\n                    abi.encode(api3ServerV1, dataFeedId)\\n                )\\n            )\\n        );\\n    }\\n\\n    /// @notice Computes the address of the dAPI proxy\\n    /// @param dapiName dAPI name\\n    /// @param metadata Metadata associated with the proxy\\n    /// @return proxyAddress Proxy address\\n    function computeDapiProxyAddress(\\n        bytes32 dapiName,\\n        bytes calldata metadata\\n    ) external view override returns (address proxyAddress) {\\n        require(dapiName != bytes32(0), \\\"dAPI name zero\\\");\\n        proxyAddress = Create2.computeAddress(\\n            keccak256(metadata),\\n            keccak256(\\n                abi.encodePacked(\\n                    type(DapiProxy).creationCode,\\n                    abi.encode(\\n                        api3ServerV1,\\n                        keccak256(abi.encodePacked(dapiName))\\n                    )\\n                )\\n            )\\n        );\\n    }\\n\\n    /// @notice Computes the address of the data feed proxy with OEV support\\n    /// @param dataFeedId Data feed ID\\n    /// @param oevBeneficiary OEV beneficiary\\n    /// @param metadata Metadata associated with the proxy\\n    /// @return proxyAddress Proxy address\\n    function computeDataFeedProxyWithOevAddress(\\n        bytes32 dataFeedId,\\n        address oevBeneficiary,\\n        bytes calldata metadata\\n    ) external view override returns (address proxyAddress) {\\n        require(dataFeedId != bytes32(0), \\\"Data feed ID zero\\\");\\n        require(oevBeneficiary != address(0), \\\"OEV beneficiary zero\\\");\\n        proxyAddress = Create2.computeAddress(\\n            keccak256(metadata),\\n            keccak256(\\n                abi.encodePacked(\\n                    type(DataFeedProxyWithOev).creationCode,\\n                    abi.encode(api3ServerV1, dataFeedId, oevBeneficiary)\\n                )\\n            )\\n        );\\n    }\\n\\n    /// @notice Computes the address of the dAPI proxy with OEV support\\n    /// @param dapiName dAPI name\\n    /// @param oevBeneficiary OEV beneficiary\\n    /// @param metadata Metadata associated with the proxy\\n    /// @return proxyAddress Proxy address\\n    function computeDapiProxyWithOevAddress(\\n        bytes32 dapiName,\\n        address oevBeneficiary,\\n        bytes calldata metadata\\n    ) external view override returns (address proxyAddress) {\\n        require(dapiName != bytes32(0), \\\"dAPI name zero\\\");\\n        require(oevBeneficiary != address(0), \\\"OEV beneficiary zero\\\");\\n        proxyAddress = Create2.computeAddress(\\n            keccak256(metadata),\\n            keccak256(\\n                abi.encodePacked(\\n                    type(DapiProxyWithOev).creationCode,\\n                    abi.encode(\\n                        api3ServerV1,\\n                        keccak256(abi.encodePacked(dapiName)),\\n                        oevBeneficiary\\n                    )\\n                )\\n            )\\n        );\\n    }\\n}\\n\",\"keccak256\":\"0x044df7d743f5797b23e17e53e54f428164193a44eb51c6c20293e796621623bd\",\"license\":\"MIT\"},\"contracts/api3-server-v1/proxies/interfaces/IDapiProxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IProxy.sol\\\";\\n\\ninterface IDapiProxy is IProxy {\\n    function dapiNameHash() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x7fee704659b2fd4629ce105b686284bb922f73d2261b04ad927f8e4b54479409\",\"license\":\"MIT\"},\"contracts/api3-server-v1/proxies/interfaces/IDataFeedProxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IProxy.sol\\\";\\n\\ninterface IDataFeedProxy is IProxy {\\n    function dataFeedId() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x114b4d530c3aa4e9359d7d4596170068b294d65ead405dc590b120e991d7b587\",\"license\":\"MIT\"},\"contracts/api3-server-v1/proxies/interfaces/IOevProxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IOevProxy {\\n    function oevBeneficiary() external view returns (address);\\n}\\n\",\"keccak256\":\"0xcd9962a465c96e85638eb40775da008f9c86a0ea0c50c7c5fcbb11c55f48fc22\",\"license\":\"MIT\"},\"contracts/api3-server-v1/proxies/interfaces/IProxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/// @dev See DapiProxy.sol for comments about usage\\ninterface IProxy {\\n    function read() external view returns (int224 value, uint32 timestamp);\\n\\n    function api3ServerV1() external view returns (address);\\n}\\n\",\"keccak256\":\"0x3ad69ef6ff3de4056ec43eb8b47465f3d896f88e95cfffb909a6d057b91db17b\",\"license\":\"MIT\"},\"contracts/api3-server-v1/proxies/interfaces/IProxyFactory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IProxyFactory {\\n    event DeployedDataFeedProxy(\\n        address indexed proxyAddress,\\n        bytes32 indexed dataFeedId,\\n        bytes metadata\\n    );\\n\\n    event DeployedDapiProxy(\\n        address indexed proxyAddress,\\n        bytes32 indexed dapiName,\\n        bytes metadata\\n    );\\n\\n    event DeployedDataFeedProxyWithOev(\\n        address indexed proxyAddress,\\n        bytes32 indexed dataFeedId,\\n        address oevBeneficiary,\\n        bytes metadata\\n    );\\n\\n    event DeployedDapiProxyWithOev(\\n        address indexed proxyAddress,\\n        bytes32 indexed dapiName,\\n        address oevBeneficiary,\\n        bytes metadata\\n    );\\n\\n    function deployDataFeedProxy(\\n        bytes32 dataFeedId,\\n        bytes calldata metadata\\n    ) external returns (address proxyAddress);\\n\\n    function deployDapiProxy(\\n        bytes32 dapiName,\\n        bytes calldata metadata\\n    ) external returns (address proxyAddress);\\n\\n    function deployDataFeedProxyWithOev(\\n        bytes32 dataFeedId,\\n        address oevBeneficiary,\\n        bytes calldata metadata\\n    ) external returns (address proxyAddress);\\n\\n    function deployDapiProxyWithOev(\\n        bytes32 dapiName,\\n        address oevBeneficiary,\\n        bytes calldata metadata\\n    ) external returns (address proxyAddress);\\n\\n    function computeDataFeedProxyAddress(\\n        bytes32 dataFeedId,\\n        bytes calldata metadata\\n    ) external view returns (address proxyAddress);\\n\\n    function computeDapiProxyAddress(\\n        bytes32 dapiName,\\n        bytes calldata metadata\\n    ) external view returns (address proxyAddress);\\n\\n    function computeDataFeedProxyWithOevAddress(\\n        bytes32 dataFeedId,\\n        address oevBeneficiary,\\n        bytes calldata metadata\\n    ) external view returns (address proxyAddress);\\n\\n    function computeDapiProxyWithOevAddress(\\n        bytes32 dapiName,\\n        address oevBeneficiary,\\n        bytes calldata metadata\\n    ) external view returns (address proxyAddress);\\n\\n    function api3ServerV1() external view returns (address);\\n}\\n\",\"keccak256\":\"0x60b3b838b94ead5e5760a897053236ce20954a616a6892c7088ad1cf851290a1\",\"license\":\"MIT\"},\"contracts/utils/interfaces/IExtendedSelfMulticall.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./ISelfMulticall.sol\\\";\\n\\ninterface IExtendedSelfMulticall is ISelfMulticall {\\n    function getChainId() external view returns (uint256);\\n\\n    function getBalance(address account) external view returns (uint256);\\n\\n    function containsBytecode(address account) external view returns (bool);\\n\\n    function getBlockNumber() external view returns (uint256);\\n\\n    function getBlockTimestamp() external view returns (uint256);\\n\\n    function getBlockBasefee() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xaefe61a623c920d3e39c4779535e280378b44202d11c29a2c96f46f2fe5f420d\",\"license\":\"MIT\"},\"contracts/utils/interfaces/ISelfMulticall.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface ISelfMulticall {\\n    function multicall(\\n        bytes[] calldata data\\n    ) external returns (bytes[] memory returndata);\\n\\n    function tryMulticall(\\n        bytes[] calldata data\\n    ) external returns (bool[] memory successes, bytes[] memory returndata);\\n}\\n\",\"keccak256\":\"0x50b27284f0d5acd8b340836c09d252138ebf059f426e5d90d3f7221e1b7d0817\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051611ae1380380611ae183398101604081905261002f9161009a565b6001600160a01b0381166100895760405162461bcd60e51b815260206004820152601960248201527f4170693353657276657256312061646472657373207a65726f00000000000000604482015260640160405180910390fd5b6001600160a01b03166080526100ca565b6000602082840312156100ac57600080fd5b81516001600160a01b03811681146100c357600080fd5b9392505050565b6080516119c561011c6000396000818160ad0152818161020b0152818161032901528181610501015281816105a4015281816106fd01528181610805015281816109a60152610a7d01526119c56000f3fe608060405234801561001057600080fd5b50600436106100a35760003560e01c80637dba7458116100765780639ae06c841161005b5780639ae06c841461014a578063d67564bd1461015d578063da1b7d0f1461017057600080fd5b80637dba7458146101245780638dae1a471461013757600080fd5b80632d6a744e146100a857806350763e84146100eb5780635849e5ef146100fe5780636c9d6c0914610111575b600080fd5b6100cf7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200160405180910390f35b6100cf6100f9366004610b72565b610183565b6100cf61010c366004610bbe565b610282565b6100cf61011f366004610bbe565b61040f565b6100cf610132366004610b72565b610547565b6100cf610145366004610bbe565b610653565b6100cf610158366004610b72565b6107ab565b6100cf61016b366004610bbe565b6108cd565b6100cf61017e366004610b72565b6109e1565b6000836101cb5760405162461bcd60e51b8152602060048201526011602482015270446174612066656564204944207a65726f60781b60448201526064015b60405180910390fd5b61027a83836040516101de929190610c26565b604051908190038120906101f460208201610af5565b601f1982820381018352601f9091011660408181527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316602083015281018890526060015b60408051601f198184030181529082905261025f9291602001610c66565b60405160208183030381529060405280519060200120610ab7565b949350505050565b6000846102c25760405162461bcd60e51b815260206004820152600e60248201526d64415049206e616d65207a65726f60901b60448201526064016101c2565b6001600160a01b03841661030f5760405162461bcd60e51b81526020600482015260146024820152734f45562062656e6566696369617279207a65726f60601b60448201526064016101c2565b828260405161031f929190610c26565b60405180910390207f00000000000000000000000000000000000000000000000000000000000000008660405160200161035b91815260200190565b604051602081830303815290604052805190602001208660405161037e90610b02565b6001600160a01b039384168152602081019290925290911660408201526060018190604051809103906000f59050801580156103be573d6000803e3d6000fd5b50905084816001600160a01b03167f31d654553da13df7303eb8db83942ff8816845087d3149515a220f5afb37aedd8686866040516103ff93929190610ca4565b60405180910390a3949350505050565b60008461044f5760405162461bcd60e51b815260206004820152600e60248201526d64415049206e616d65207a65726f60901b60448201526064016101c2565b6001600160a01b03841661049c5760405162461bcd60e51b81526020600482015260146024820152734f45562062656e6566696369617279207a65726f60601b60448201526064016101c2565b61053e83836040516104af929190610c26565b604051908190038120906104c560208201610b02565b818103601f199081018352601f90910116604081815260208083018b905281518084038201815282840190925281519101206001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660608401526080830191909152881660a082015260c001610241565b95945050505050565b60008361058a5760405162461bcd60e51b8152602060048201526011602482015270446174612066656564204944207a65726f60781b60448201526064016101c2565b828260405161059a929190610c26565b60405180910390207f0000000000000000000000000000000000000000000000000000000000000000856040516105d090610af5565b6001600160a01b03909216825260208201526040018190604051809103906000f5905080158015610605573d6000803e3d6000fd5b50905083816001600160a01b03167f9a2a9d77287e93a2addaf0c5f3e354d075dfb475f5e197f9abc9b11b922fa9438585604051610644929190610cc7565b60405180910390a39392505050565b6000846106965760405162461bcd60e51b8152602060048201526011602482015270446174612066656564204944207a65726f60781b60448201526064016101c2565b6001600160a01b0384166106e35760405162461bcd60e51b81526020600482015260146024820152734f45562062656e6566696369617279207a65726f60601b60448201526064016101c2565b82826040516106f3929190610c26565b60405180910390207f0000000000000000000000000000000000000000000000000000000000000000868660405161072a90610b0f565b6001600160a01b039384168152602081019290925290911660408201526060018190604051809103906000f590508015801561076a573d6000803e3d6000fd5b50905084816001600160a01b03167fff915717e95cf852fef69474bc2bfb3c26ccc15a6978a90ab0a78bc565644d4e8686866040516103ff93929190610ca4565b6000836107eb5760405162461bcd60e51b815260206004820152600e60248201526d64415049206e616d65207a65726f60901b60448201526064016101c2565b82826040516107fb929190610c26565b60405180910390207f00000000000000000000000000000000000000000000000000000000000000008560405160200161083791815260200190565b6040516020818303038152906040528051906020012060405161085990610b1c565b6001600160a01b03909216825260208201526040018190604051809103906000f590508015801561088e573d6000803e3d6000fd5b50905083816001600160a01b03167f5212a04ae578b0432469e3d61a28f222c00cf2f5e14d69b0f08c7d327b623d1d8585604051610644929190610cc7565b6000846109105760405162461bcd60e51b8152602060048201526011602482015270446174612066656564204944207a65726f60781b60448201526064016101c2565b6001600160a01b03841661095d5760405162461bcd60e51b81526020600482015260146024820152734f45562062656e6566696369617279207a65726f60601b60448201526064016101c2565b61053e8383604051610970929190610c26565b6040519081900381209061098660208201610b0f565b818103601f199081018352601f9091011660408181526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660208401529082018a905288166060820152608001610241565b600083610a215760405162461bcd60e51b815260206004820152600e60248201526d64415049206e616d65207a65726f60901b60448201526064016101c2565b61027a8383604051610a34929190610c26565b60405190819003812090610a4a60208201610b1c565b601f1982820381018352601f90910116604081815260208083018a905281518084038201815282840190925281519101207f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166060830152608082015260a001610241565b6000610ac4838330610acb565b9392505050565b6000604051836040820152846020820152828152600b8101905060ff815360559020949350505050565b6102fd80610cdc83390190565b61035d80610fd983390190565b61035d8061133683390190565b6102fd8061169383390190565b60008083601f840112610b3b57600080fd5b50813567ffffffffffffffff811115610b5357600080fd5b602083019150836020828501011115610b6b57600080fd5b9250929050565b600080600060408486031215610b8757600080fd5b83359250602084013567ffffffffffffffff811115610ba557600080fd5b610bb186828701610b29565b9497909650939450505050565b60008060008060608587031215610bd457600080fd5b8435935060208501356001600160a01b0381168114610bf257600080fd5b9250604085013567ffffffffffffffff811115610c0e57600080fd5b610c1a87828801610b29565b95989497509550505050565b8183823760009101908152919050565b6000815160005b81811015610c575760208185018101518683015201610c3d565b50600093019283525090919050565b600061027a610c758386610c36565b84610c36565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6001600160a01b038416815260406020820152600061053e604083018486610c7b565b60208152600061027a602083018486610c7b56fe60c060405234801561001057600080fd5b506040516102fd3803806102fd83398101604081905261002f91610045565b6001600160a01b0390911660805260a05261007f565b6000806040838503121561005857600080fd5b82516001600160a01b038116811461006f57600080fd5b6020939093015192949293505050565b60805160a05161024d6100b060003960008181609c015261011b015260008181604b015261015b015261024d6000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80632d6a744e14610046578063370c826b1461009757806357de26a4146100cc575b600080fd5b61006d7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6100be7f000000000000000000000000000000000000000000000000000000000000000081565b60405190815260200161008e565b6100d46100f3565b60408051601b9390930b835263ffffffff90911660208301520161008e565b6040517fa5fc076f0000000000000000000000000000000000000000000000000000000081527f00000000000000000000000000000000000000000000000000000000000000006004820152600090819073ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169063a5fc076f906024016040805180830381865afa1580156101a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c591906101ce565b90939092509050565b600080604083850312156101e157600080fd5b825180601b0b81146101f257600080fd5b602084015190925063ffffffff8116811461020c57600080fd5b80915050925092905056fea26469706673582212204c00c55f37d9d93afc24a97a86b86c67275c3e6f0288edd31c678400d06b4dcc64736f6c6343000811003360e060405234801561001057600080fd5b5060405161035d38038061035d83398101604081905261002f91610068565b6001600160a01b0392831660805260a0919091521660c0526100a4565b80516001600160a01b038116811461006357600080fd5b919050565b60008060006060848603121561007d57600080fd5b6100868461004c565b92506020840151915061009b6040850161004c565b90509250925092565b60805160a05160c05161027f6100de6000396000605601526000818160f5015261014d01526000818160a7015261018d015261027f6000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80630e15999d146100515780632d6a744e146100a257806357de26a4146100c9578063dcf8da92146100f0575b600080fd5b6100787f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6100787f000000000000000000000000000000000000000000000000000000000000000081565b6100d1610125565b60408051601b9390930b835263ffffffff909116602083015201610099565b6101177f000000000000000000000000000000000000000000000000000000000000000081565b604051908152602001610099565b6040517f32be8f0b0000000000000000000000000000000000000000000000000000000081527f00000000000000000000000000000000000000000000000000000000000000006004820152600090819073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016906332be8f0b906024016040805180830381865afa1580156101d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101f79190610200565b90939092509050565b6000806040838503121561021357600080fd5b825180601b0b811461022457600080fd5b602084015190925063ffffffff8116811461023e57600080fd5b80915050925092905056fea2646970667358221220165f090121acbfb6f16face0e037df12b601e08d2e0fd3fd3f5e021e053308ce64736f6c6343000811003360e060405234801561001057600080fd5b5060405161035d38038061035d83398101604081905261002f91610068565b6001600160a01b0392831660805260a0919091521660c0526100a4565b80516001600160a01b038116811461006357600080fd5b919050565b60008060006060848603121561007d57600080fd5b6100868461004c565b92506020840151915061009b6040850161004c565b90509250925092565b60805160a05160c05161027f6100de6000396000605601526000818160ce015261014d01526000818160a7015261018d015261027f6000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80630e15999d146100515780632d6a744e146100a2578063370c826b146100c957806357de26a4146100fe575b600080fd5b6100787f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6100787f000000000000000000000000000000000000000000000000000000000000000081565b6100f07f000000000000000000000000000000000000000000000000000000000000000081565b604051908152602001610099565b610106610125565b60408051601b9390930b835263ffffffff909116602083015201610099565b6040517fcfaf49710000000000000000000000000000000000000000000000000000000081527f00000000000000000000000000000000000000000000000000000000000000006004820152600090819073ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169063cfaf4971906024016040805180830381865afa1580156101d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101f79190610200565b90939092509050565b6000806040838503121561021357600080fd5b825180601b0b811461022457600080fd5b602084015190925063ffffffff8116811461023e57600080fd5b80915050925092905056fea2646970667358221220491c4b81100c410951a4eacc896ef33bf2f2865d87768147c4ca7217d63d79c864736f6c6343000811003360c060405234801561001057600080fd5b506040516102fd3803806102fd83398101604081905261002f91610045565b6001600160a01b0390911660805260a05261007f565b6000806040838503121561005857600080fd5b82516001600160a01b038116811461006f57600080fd5b6020939093015192949293505050565b60805160a05161024d6100b06000396000818160c3015261011b015260008181604b015261015b015261024d6000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80632d6a744e1461004657806357de26a414610097578063dcf8da92146100be575b600080fd5b61006d7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b61009f6100f3565b60408051601b9390930b835263ffffffff90911660208301520161008e565b6100e57f000000000000000000000000000000000000000000000000000000000000000081565b60405190815260200161008e565b6040517fb62408a30000000000000000000000000000000000000000000000000000000081527f00000000000000000000000000000000000000000000000000000000000000006004820152600090819073ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169063b62408a3906024016040805180830381865afa1580156101a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c591906101ce565b90939092509050565b600080604083850312156101e157600080fd5b825180601b0b81146101f257600080fd5b602084015190925063ffffffff8116811461020c57600080fd5b80915050925092905056fea26469706673582212201d061d50f160b049953a990ae61794869544bc65e5a0d25812e444c431cb90f964736f6c63430008110033a2646970667358221220c65d86e8fe1882ee9717fe8fadf286e2319482a7213942b09ed85c68e3cb244164736f6c63430008110033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100a35760003560e01c80637dba7458116100765780639ae06c841161005b5780639ae06c841461014a578063d67564bd1461015d578063da1b7d0f1461017057600080fd5b80637dba7458146101245780638dae1a471461013757600080fd5b80632d6a744e146100a857806350763e84146100eb5780635849e5ef146100fe5780636c9d6c0914610111575b600080fd5b6100cf7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200160405180910390f35b6100cf6100f9366004610b72565b610183565b6100cf61010c366004610bbe565b610282565b6100cf61011f366004610bbe565b61040f565b6100cf610132366004610b72565b610547565b6100cf610145366004610bbe565b610653565b6100cf610158366004610b72565b6107ab565b6100cf61016b366004610bbe565b6108cd565b6100cf61017e366004610b72565b6109e1565b6000836101cb5760405162461bcd60e51b8152602060048201526011602482015270446174612066656564204944207a65726f60781b60448201526064015b60405180910390fd5b61027a83836040516101de929190610c26565b604051908190038120906101f460208201610af5565b601f1982820381018352601f9091011660408181527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316602083015281018890526060015b60408051601f198184030181529082905261025f9291602001610c66565b60405160208183030381529060405280519060200120610ab7565b949350505050565b6000846102c25760405162461bcd60e51b815260206004820152600e60248201526d64415049206e616d65207a65726f60901b60448201526064016101c2565b6001600160a01b03841661030f5760405162461bcd60e51b81526020600482015260146024820152734f45562062656e6566696369617279207a65726f60601b60448201526064016101c2565b828260405161031f929190610c26565b60405180910390207f00000000000000000000000000000000000000000000000000000000000000008660405160200161035b91815260200190565b604051602081830303815290604052805190602001208660405161037e90610b02565b6001600160a01b039384168152602081019290925290911660408201526060018190604051809103906000f59050801580156103be573d6000803e3d6000fd5b50905084816001600160a01b03167f31d654553da13df7303eb8db83942ff8816845087d3149515a220f5afb37aedd8686866040516103ff93929190610ca4565b60405180910390a3949350505050565b60008461044f5760405162461bcd60e51b815260206004820152600e60248201526d64415049206e616d65207a65726f60901b60448201526064016101c2565b6001600160a01b03841661049c5760405162461bcd60e51b81526020600482015260146024820152734f45562062656e6566696369617279207a65726f60601b60448201526064016101c2565b61053e83836040516104af929190610c26565b604051908190038120906104c560208201610b02565b818103601f199081018352601f90910116604081815260208083018b905281518084038201815282840190925281519101206001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660608401526080830191909152881660a082015260c001610241565b95945050505050565b60008361058a5760405162461bcd60e51b8152602060048201526011602482015270446174612066656564204944207a65726f60781b60448201526064016101c2565b828260405161059a929190610c26565b60405180910390207f0000000000000000000000000000000000000000000000000000000000000000856040516105d090610af5565b6001600160a01b03909216825260208201526040018190604051809103906000f5905080158015610605573d6000803e3d6000fd5b50905083816001600160a01b03167f9a2a9d77287e93a2addaf0c5f3e354d075dfb475f5e197f9abc9b11b922fa9438585604051610644929190610cc7565b60405180910390a39392505050565b6000846106965760405162461bcd60e51b8152602060048201526011602482015270446174612066656564204944207a65726f60781b60448201526064016101c2565b6001600160a01b0384166106e35760405162461bcd60e51b81526020600482015260146024820152734f45562062656e6566696369617279207a65726f60601b60448201526064016101c2565b82826040516106f3929190610c26565b60405180910390207f0000000000000000000000000000000000000000000000000000000000000000868660405161072a90610b0f565b6001600160a01b039384168152602081019290925290911660408201526060018190604051809103906000f590508015801561076a573d6000803e3d6000fd5b50905084816001600160a01b03167fff915717e95cf852fef69474bc2bfb3c26ccc15a6978a90ab0a78bc565644d4e8686866040516103ff93929190610ca4565b6000836107eb5760405162461bcd60e51b815260206004820152600e60248201526d64415049206e616d65207a65726f60901b60448201526064016101c2565b82826040516107fb929190610c26565b60405180910390207f00000000000000000000000000000000000000000000000000000000000000008560405160200161083791815260200190565b6040516020818303038152906040528051906020012060405161085990610b1c565b6001600160a01b03909216825260208201526040018190604051809103906000f590508015801561088e573d6000803e3d6000fd5b50905083816001600160a01b03167f5212a04ae578b0432469e3d61a28f222c00cf2f5e14d69b0f08c7d327b623d1d8585604051610644929190610cc7565b6000846109105760405162461bcd60e51b8152602060048201526011602482015270446174612066656564204944207a65726f60781b60448201526064016101c2565b6001600160a01b03841661095d5760405162461bcd60e51b81526020600482015260146024820152734f45562062656e6566696369617279207a65726f60601b60448201526064016101c2565b61053e8383604051610970929190610c26565b6040519081900381209061098660208201610b0f565b818103601f199081018352601f9091011660408181526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660208401529082018a905288166060820152608001610241565b600083610a215760405162461bcd60e51b815260206004820152600e60248201526d64415049206e616d65207a65726f60901b60448201526064016101c2565b61027a8383604051610a34929190610c26565b60405190819003812090610a4a60208201610b1c565b601f1982820381018352601f90910116604081815260208083018a905281518084038201815282840190925281519101207f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166060830152608082015260a001610241565b6000610ac4838330610acb565b9392505050565b6000604051836040820152846020820152828152600b8101905060ff815360559020949350505050565b6102fd80610cdc83390190565b61035d80610fd983390190565b61035d8061133683390190565b6102fd8061169383390190565b60008083601f840112610b3b57600080fd5b50813567ffffffffffffffff811115610b5357600080fd5b602083019150836020828501011115610b6b57600080fd5b9250929050565b600080600060408486031215610b8757600080fd5b83359250602084013567ffffffffffffffff811115610ba557600080fd5b610bb186828701610b29565b9497909650939450505050565b60008060008060608587031215610bd457600080fd5b8435935060208501356001600160a01b0381168114610bf257600080fd5b9250604085013567ffffffffffffffff811115610c0e57600080fd5b610c1a87828801610b29565b95989497509550505050565b8183823760009101908152919050565b6000815160005b81811015610c575760208185018101518683015201610c3d565b50600093019283525090919050565b600061027a610c758386610c36565b84610c36565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6001600160a01b038416815260406020820152600061053e604083018486610c7b565b60208152600061027a602083018486610c7b56fe60c060405234801561001057600080fd5b506040516102fd3803806102fd83398101604081905261002f91610045565b6001600160a01b0390911660805260a05261007f565b6000806040838503121561005857600080fd5b82516001600160a01b038116811461006f57600080fd5b6020939093015192949293505050565b60805160a05161024d6100b060003960008181609c015261011b015260008181604b015261015b015261024d6000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80632d6a744e14610046578063370c826b1461009757806357de26a4146100cc575b600080fd5b61006d7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6100be7f000000000000000000000000000000000000000000000000000000000000000081565b60405190815260200161008e565b6100d46100f3565b60408051601b9390930b835263ffffffff90911660208301520161008e565b6040517fa5fc076f0000000000000000000000000000000000000000000000000000000081527f00000000000000000000000000000000000000000000000000000000000000006004820152600090819073ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169063a5fc076f906024016040805180830381865afa1580156101a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c591906101ce565b90939092509050565b600080604083850312156101e157600080fd5b825180601b0b81146101f257600080fd5b602084015190925063ffffffff8116811461020c57600080fd5b80915050925092905056fea26469706673582212204c00c55f37d9d93afc24a97a86b86c67275c3e6f0288edd31c678400d06b4dcc64736f6c6343000811003360e060405234801561001057600080fd5b5060405161035d38038061035d83398101604081905261002f91610068565b6001600160a01b0392831660805260a0919091521660c0526100a4565b80516001600160a01b038116811461006357600080fd5b919050565b60008060006060848603121561007d57600080fd5b6100868461004c565b92506020840151915061009b6040850161004c565b90509250925092565b60805160a05160c05161027f6100de6000396000605601526000818160f5015261014d01526000818160a7015261018d015261027f6000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80630e15999d146100515780632d6a744e146100a257806357de26a4146100c9578063dcf8da92146100f0575b600080fd5b6100787f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6100787f000000000000000000000000000000000000000000000000000000000000000081565b6100d1610125565b60408051601b9390930b835263ffffffff909116602083015201610099565b6101177f000000000000000000000000000000000000000000000000000000000000000081565b604051908152602001610099565b6040517f32be8f0b0000000000000000000000000000000000000000000000000000000081527f00000000000000000000000000000000000000000000000000000000000000006004820152600090819073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016906332be8f0b906024016040805180830381865afa1580156101d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101f79190610200565b90939092509050565b6000806040838503121561021357600080fd5b825180601b0b811461022457600080fd5b602084015190925063ffffffff8116811461023e57600080fd5b80915050925092905056fea2646970667358221220165f090121acbfb6f16face0e037df12b601e08d2e0fd3fd3f5e021e053308ce64736f6c6343000811003360e060405234801561001057600080fd5b5060405161035d38038061035d83398101604081905261002f91610068565b6001600160a01b0392831660805260a0919091521660c0526100a4565b80516001600160a01b038116811461006357600080fd5b919050565b60008060006060848603121561007d57600080fd5b6100868461004c565b92506020840151915061009b6040850161004c565b90509250925092565b60805160a05160c05161027f6100de6000396000605601526000818160ce015261014d01526000818160a7015261018d015261027f6000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80630e15999d146100515780632d6a744e146100a2578063370c826b146100c957806357de26a4146100fe575b600080fd5b6100787f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6100787f000000000000000000000000000000000000000000000000000000000000000081565b6100f07f000000000000000000000000000000000000000000000000000000000000000081565b604051908152602001610099565b610106610125565b60408051601b9390930b835263ffffffff909116602083015201610099565b6040517fcfaf49710000000000000000000000000000000000000000000000000000000081527f00000000000000000000000000000000000000000000000000000000000000006004820152600090819073ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169063cfaf4971906024016040805180830381865afa1580156101d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101f79190610200565b90939092509050565b6000806040838503121561021357600080fd5b825180601b0b811461022457600080fd5b602084015190925063ffffffff8116811461023e57600080fd5b80915050925092905056fea2646970667358221220491c4b81100c410951a4eacc896ef33bf2f2865d87768147c4ca7217d63d79c864736f6c6343000811003360c060405234801561001057600080fd5b506040516102fd3803806102fd83398101604081905261002f91610045565b6001600160a01b0390911660805260a05261007f565b6000806040838503121561005857600080fd5b82516001600160a01b038116811461006f57600080fd5b6020939093015192949293505050565b60805160a05161024d6100b06000396000818160c3015261011b015260008181604b015261015b015261024d6000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80632d6a744e1461004657806357de26a414610097578063dcf8da92146100be575b600080fd5b61006d7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b61009f6100f3565b60408051601b9390930b835263ffffffff90911660208301520161008e565b6100e57f000000000000000000000000000000000000000000000000000000000000000081565b60405190815260200161008e565b6040517fb62408a30000000000000000000000000000000000000000000000000000000081527f00000000000000000000000000000000000000000000000000000000000000006004820152600090819073ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169063b62408a3906024016040805180830381865afa1580156101a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c591906101ce565b90939092509050565b600080604083850312156101e157600080fd5b825180601b0b81146101f257600080fd5b602084015190925063ffffffff8116811461020c57600080fd5b80915050925092905056fea26469706673582212201d061d50f160b049953a990ae61794869544bc65e5a0d25812e444c431cb90f964736f6c63430008110033a2646970667358221220c65d86e8fe1882ee9717fe8fadf286e2319482a7213942b09ed85c68e3cb244164736f6c63430008110033",
  "devdoc": {
    "details": "The proxies are deployed normally and not cloned to minimize the gas cost overhead while using them to read data feed values",
    "kind": "dev",
    "methods": {
      "computeDapiProxyAddress(bytes32,bytes)": {
        "params": {
          "dapiName": "dAPI name",
          "metadata": "Metadata associated with the proxy"
        },
        "returns": {
          "proxyAddress": "Proxy address"
        }
      },
      "computeDapiProxyWithOevAddress(bytes32,address,bytes)": {
        "params": {
          "dapiName": "dAPI name",
          "metadata": "Metadata associated with the proxy",
          "oevBeneficiary": "OEV beneficiary"
        },
        "returns": {
          "proxyAddress": "Proxy address"
        }
      },
      "computeDataFeedProxyAddress(bytes32,bytes)": {
        "params": {
          "dataFeedId": "Data feed ID",
          "metadata": "Metadata associated with the proxy"
        },
        "returns": {
          "proxyAddress": "Proxy address"
        }
      },
      "computeDataFeedProxyWithOevAddress(bytes32,address,bytes)": {
        "params": {
          "dataFeedId": "Data feed ID",
          "metadata": "Metadata associated with the proxy",
          "oevBeneficiary": "OEV beneficiary"
        },
        "returns": {
          "proxyAddress": "Proxy address"
        }
      },
      "constructor": {
        "params": {
          "_api3ServerV1": "Api3ServerV1 address"
        }
      },
      "deployDapiProxy(bytes32,bytes)": {
        "params": {
          "dapiName": "dAPI name",
          "metadata": "Metadata associated with the proxy"
        },
        "returns": {
          "proxyAddress": "Proxy address"
        }
      },
      "deployDapiProxyWithOev(bytes32,address,bytes)": {
        "params": {
          "dapiName": "dAPI name",
          "metadata": "Metadata associated with the proxy",
          "oevBeneficiary": "OEV beneficiary"
        },
        "returns": {
          "proxyAddress": "Proxy address"
        }
      },
      "deployDataFeedProxy(bytes32,bytes)": {
        "params": {
          "dataFeedId": "Data feed ID",
          "metadata": "Metadata associated with the proxy"
        },
        "returns": {
          "proxyAddress": "Proxy address"
        }
      },
      "deployDataFeedProxyWithOev(bytes32,address,bytes)": {
        "params": {
          "dataFeedId": "Data feed ID",
          "metadata": "Metadata associated with the proxy",
          "oevBeneficiary": "OEV beneficiary"
        },
        "returns": {
          "proxyAddress": "Proxy address"
        }
      }
    },
    "title": "Contract factory that deterministically deploys proxies that read data feeds (Beacons or Beacon sets) or dAPIs, along with optional OEV support",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "api3ServerV1()": {
        "notice": "Api3ServerV1 address"
      },
      "computeDapiProxyAddress(bytes32,bytes)": {
        "notice": "Computes the address of the dAPI proxy"
      },
      "computeDapiProxyWithOevAddress(bytes32,address,bytes)": {
        "notice": "Computes the address of the dAPI proxy with OEV support"
      },
      "computeDataFeedProxyAddress(bytes32,bytes)": {
        "notice": "Computes the address of the data feed proxy"
      },
      "computeDataFeedProxyWithOevAddress(bytes32,address,bytes)": {
        "notice": "Computes the address of the data feed proxy with OEV support"
      },
      "deployDapiProxy(bytes32,bytes)": {
        "notice": "Deterministically deploys a dAPI proxy"
      },
      "deployDapiProxyWithOev(bytes32,address,bytes)": {
        "notice": "Deterministically deploys a dAPI proxy with OEV support"
      },
      "deployDataFeedProxy(bytes32,bytes)": {
        "notice": "Deterministically deploys a data feed proxy"
      },
      "deployDataFeedProxyWithOev(bytes32,address,bytes)": {
        "notice": "Deterministically deploys a data feed proxy with OEV support"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}
